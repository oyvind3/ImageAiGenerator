{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GalleryComponent } from \"../../ui/gallery/gallery.component\";\nimport { PromptComponent } from \"../../ui/prompt/prompt.component\";\nimport { BehaviorSubject, combineLatest, map, of, switchMap } from 'rxjs';\nimport { WineGeneratorService } from 'src/app/data-access/wine-generator.service';\nlet WineGeneratorComponent = class WineGeneratorComponent {\n  constructor() {\n    this.wineGenerator = inject(WineGeneratorService);\n    this.prompt$$ = new BehaviorSubject('');\n    this.prompt$ = this.prompt$$.asObservable();\n    this.wines$ = this.prompt$.pipe(switchMap(value => {\n      if (!value) {\n        return of([]);\n      }\n      return this.wineGenerator.getWines(value, 3);\n    }));\n    this.vm$ = combineLatest([this.prompt$, this.wines$]).pipe(map(([prompt, wines]) => ({\n      prompt,\n      wines\n    })));\n  }\n  prompted(value) {\n    this.prompt$$.next(value);\n    console.log(value);\n  }\n};\nWineGeneratorComponent = __decorate([Component({\n  selector: 'app-wine-generator',\n  standalone: true,\n  template: `\n<div *ngIf=\"vm$ | async as vm\">\n  <app-prompt (prompted)=\"prompted($event)\"></app-prompt>\n\n  <p *ngIf=\"vm.prompt\">Requesting wines from: {{ vm.prompt }}</p>\n\n  <app-gallery [wines]=\"vm.wines\"></app-gallery>\n\n</div>\n`,\n  styles: [],\n  imports: [CommonModule, GalleryComponent, PromptComponent]\n})], WineGeneratorComponent);\nexport { WineGeneratorComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,eAAe,EAAEC,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACzE,SAASC,oBAAoB,QAAQ,4CAA4C;AAmB1E,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAA5BC;IAEY,kBAAa,GAAGX,MAAM,CAACS,oBAAoB,CAAC;IAE5C,aAAQ,GAAG,IAAIL,eAAe,CAAS,EAAE,CAAC;IAC1C,YAAO,GAAG,IAAI,CAACQ,QAAQ,CAACC,YAAY,EAAE;IAEtC,WAAM,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,CACzCP,SAAS,CAAEQ,KAAK,IAAI;MAClB,IAAI,CAACA,KAAK,EAAE;QACV,OAAOT,EAAE,CAAE,EAAE,CAAC;;MAGhB,OAAO,IAAI,CAACU,aAAa,CAACC,QAAQ,CAACF,KAAK,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,CACH;IAEe,QAAG,GAAGX,aAAa,CAAC,CAAC,IAAI,CAACS,OAAO,EAAE,IAAI,CAACK,MAAM,CAAC,CAAC,CAC/DJ,IAAI,CAACT,GAAG,CAAC,CAAC,CAACc,MAAM,EAAEC,KAAK,CAAC,MAAM;MAC7BD,MAAM;MACNC;KACF,CAAC,CAAC,CAAC;EAMN;EAJSC,QAAQ,CAACN,KAAa;IAC3B,IAAI,CAACJ,QAAQ,CAACW,IAAI,CAACP,KAAK,CAAC;IACzBQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACpB;CACD;AA3BYN,sBAAsB,eAjBlCX,SAAS,CAAC;EACT2B,QAAQ,EAAE,oBAAoB;EAC9BC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE;;;;;;;;;CASX;EACCC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,CAAC7B,YAAY,EAAEC,gBAAgB,EAAEC,eAAe;CAC1D,CAAC,GAEWO,sBAAsB,CA2BlC;SA3BYA,sBAAsB","names":["Component","inject","CommonModule","GalleryComponent","PromptComponent","BehaviorSubject","combineLatest","map","of","switchMap","WineGeneratorService","WineGeneratorComponent","constructor","prompt$$","asObservable","prompt$","pipe","value","wineGenerator","getWines","wines$","prompt","wines","prompted","next","console","log","selector","standalone","template","styles","imports"],"sourceRoot":"","sources":["C:\\Programmering\\webpage\\oyvind-ai\\src\\app\\components\\smart\\wine-generator\\wine-generator.component.ts"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GalleryComponent } from \"../../ui/gallery/gallery.component\";\nimport { PromptComponent } from \"../../ui/prompt/prompt.component\";\nimport { BehaviorSubject, combineLatest, map, of, switchMap } from 'rxjs';\nimport { WineGeneratorService } from 'src/app/data-access/wine-generator.service';\n\n@Component({\n  selector: 'app-wine-generator',\n  standalone: true,\n  template: `\n<div *ngIf=\"vm$ | async as vm\">\n  <app-prompt (prompted)=\"prompted($event)\"></app-prompt>\n\n  <p *ngIf=\"vm.prompt\">Requesting wines from: {{ vm.prompt }}</p>\n\n  <app-gallery [wines]=\"vm.wines\"></app-gallery>\n\n</div>\n`,\n  styles: [],\n  imports: [CommonModule, GalleryComponent, PromptComponent]\n})\n\nexport class WineGeneratorComponent {\n\n  private readonly wineGenerator = inject(WineGeneratorService)\n\n  private readonly prompt$$ = new BehaviorSubject<string>('');\n  private readonly prompt$ = this.prompt$$.asObservable();\n\n  private readonly wines$ = this.prompt$.pipe(\n    switchMap((value) => {\n      if (!value) {\n        return of ([]);\n      }\n      \n      return this.wineGenerator.getWines(value, 3);\n    })\n  );\n\n  public readonly vm$ = combineLatest([this.prompt$, this.wines$])\n  .pipe(map(([prompt, wines]) => ({\n     prompt,\n     wines\n  })));\n\n  public prompted(value: string): void {\n    this.prompt$$.next(value);\n    console.log(value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}